import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="COVID-19 Dashboard", layout="wide")
st.title("ü¶† COVID-19: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º –†–æ—Å—Å–∏–∏")

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö
def extract_value(x):
    return int(x.split("(")[0].replace(",", "").strip())

def extract_change(x):
    if "(" in x:
        return int(x.split("(")[1].strip("+)"))
    else:
        return 0

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_data():
    df = pd.read_csv("/content/covid.csv", encoding="utf-8")
    df = df.dropna()

    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö
    df["–ó–∞—Ä–∞–∂–µ–Ω–∏–π_—á–∏—Å–ª–æ"] = df["–ó–∞—Ä–∞–∂–µ–Ω–∏–π"].apply(extract_value)
    df["–°–º–µ—Ä—Ç–µ–π_—á–∏—Å–ª–æ"] = df["–°–º–µ—Ä—Ç–µ–π"].apply(extract_value)
    df["–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π_—á–∏—Å–ª–æ"] = df["–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π"].apply(extract_value)
    df["–ê–∫—Ç–∏–≤–Ω—ã–µ_—Å–ª—É—á–∞–∏"] = df["–ó–∞—Ä–∞–∂–µ–Ω–æ –Ω–∞ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç"].apply(extract_value)
    df["–ò–∑–º–µ–Ω–µ–Ω–∏–µ_–∑–∞—Ä–∞–∂–µ–Ω–∏–π"] = df["–ó–∞—Ä–∞–∂–µ–Ω–∏–π"].apply(extract_change)

    return df[["–†–µ–≥–∏–æ–Ω –†–æ—Å—Å–∏–∏", "–ó–∞—Ä–∞–∂–µ–Ω–∏–π_—á–∏—Å–ª–æ", "–°–º–µ—Ä—Ç–µ–π_—á–∏—Å–ª–æ", "–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π_—á–∏—Å–ª–æ", "–ê–∫—Ç–∏–≤–Ω—ã–µ_—Å–ª—É—á–∞–∏"]]

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df = load_data()

# --- –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å ---
st.sidebar.header("–§–∏–ª—å—Ç—Ä—ã")
top_n = st.sidebar.slider("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–ø-—Ä–µ–≥–∏–æ–Ω–æ–≤", min_value=5, max_value=30, value=10)

# --- –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å ---

# –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
st.subheader("üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –†–æ—Å—Å–∏–∏")
col1, col2, col3, col4 = st.columns(4)
col1.metric("–í—Å–µ–≥–æ –∑–∞—Ä–∞–∂–µ–Ω–∏–π", f"{df['–ó–∞—Ä–∞–∂–µ–Ω–∏–π_—á–∏—Å–ª–æ'].sum():,}")
col2.metric("–í—Å–µ–≥–æ —Å–º–µ—Ä—Ç–µ–π", f"{df['–°–º–µ—Ä—Ç–µ–π_—á–∏—Å–ª–æ'].sum():,}")
col3.metric("–í—Å–µ–≥–æ –≤—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π", f"{df['–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π_—á–∏—Å–ª–æ'].sum():,}")
col4.metric("–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–ª—É—á–∞–∏", f"{df['–ê–∫—Ç–∏–≤–Ω—ã–µ_—Å–ª—É—á–∞–∏'].sum():,}")

# --- –¢–û–ü –†–µ–≥–∏–æ–Ω—ã ---
st.markdown("---")
st.subheader(f"üìå –¢–æ–ø-{top_n} —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ —á–∏—Å–ª—É –∑–∞—Ä–∞–∂–µ–Ω–∏–π")

top_regions = df.sort_values(by="–ó–∞—Ä–∞–∂–µ–Ω–∏–π_—á–∏—Å–ª–æ", ascending=False).head(top_n)
fig, ax = plt.subplots(figsize=(10, 6))
sns.barplot(data=top_regions, y="–†–µ–≥–∏–æ–Ω –†–æ—Å—Å–∏–∏", x="–ó–∞—Ä–∞–∂–µ–Ω–∏–π_—á–∏—Å–ª–æ", palette="viridis")
ax.set_xlabel("–ß–∏—Å–ª–æ –∑–∞—Ä–∞–∂–µ–Ω–∏–π")
ax.set_ylabel("–†–µ–≥–∏–æ–Ω")
ax.set_title(f"–¢–æ–ø-{top_n} —Ä–µ–≥–∏–æ–Ω–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞—Ä–∞–∂–µ–Ω–∏–π")
plt.tight_layout()
st.pyplot(fig)

# --- –î–∏–∞–≥—Ä–∞–º–º–∞ —Ä–∞—Å—Å–µ—è–Ω–∏—è ---
st.markdown("---")
st.subheader("üìâ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∑–∞—Ä–∞–∂–µ–Ω–∏–π –∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤")
fig, ax = plt.subplots(figsize=(10, 6))
sns.scatterplot(data=df, x="–ó–∞—Ä–∞–∂–µ–Ω–∏–π_—á–∏—Å–ª–æ", y="–ê–∫—Ç–∏–≤–Ω—ã–µ_—Å–ª—É—á–∞–∏", alpha=0.7)
ax.set_title("–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ –æ—Ç –æ–±—â–µ–≥–æ —á–∏—Å–ª–∞ –∑–∞—Ä–∞–∂–µ–Ω–∏–π")
ax.set_xlabel("–û–±—â–µ–µ —á–∏—Å–ª–æ –∑–∞—Ä–∞–∂–µ–Ω–∏–π")
ax.set_ylabel("–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–ª—É—á–∞–∏")
st.pyplot(fig)

# --- –ú–æ–¥–µ–ª—å ML ---
st.markdown("---")
st.subheader("ü§ñ –õ–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è: –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤")

X = df[["–ó–∞—Ä–∞–∂–µ–Ω–∏–π_—á–∏—Å–ª–æ"]]
y = df["–ê–∫—Ç–∏–≤–Ω—ã–µ_—Å–ª—É—á–∞–∏"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

mse = mean_squared_error(y_test, y_pred)

st.write(f"**MSE (–æ—à–∏–±–∫–∞ –º–æ–¥–µ–ª–∏):** {mse:.2f}")

fig, ax = plt.subplots(figsize=(10, 6))
ax.scatter(X_test, y_test, color="blue", label="–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è")
ax.plot(X_test, y_pred, color="red", linewidth=2, label="–ú–æ–¥–µ–ª—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è")
ax.set_xlabel("–ß–∏—Å–ª–æ –∑–∞—Ä–∞–∂–µ–Ω–∏–π")
ax.set_ylabel("–ê–∫—Ç–∏–≤–Ω—ã–µ —Å–ª—É—á–∞–∏")
ax.set_title("–õ–∏–Ω–µ–π–Ω–∞—è —Ä–µ–≥—Ä–µ—Å—Å–∏—è")
ax.legend()
st.pyplot(fig)

# --- –î–∞–Ω–Ω—ã–µ raw ---
if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"):
    st.subheader("üìÑ –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    st.dataframe(df)

# --- –ü–æ–¥–≤–∞–ª ---
st.markdown("---")
st.markdown("¬© 2025 | –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ COVID-19 –≤ –†–æ—Å—Å–∏–∏ | Streamlit App")